
Start up GIT repository for project

git config --global user.name "Steven Ng"
git config --global user.email steven@nomadicoder.com

mkdir SitRepStage
cd SitRepStage
git init
touch README
git add README
git commit -m 'initial commit'
git remote add origin git@github.com:nomadicoder/SitRepStage.git
git push origin master

rails SitRepStage
cd SitRepStage
vi .gitignore
ls -ralt
vi .gitignore
git status
touch tmp/.gitignore log/.gitignore vendor/.gitignore
git status
git add .
git commit -a -m "Initial rails import"


rake db:create:all
script/generate scaffold stage number:integer landmark:string miles:float difficulty:integer estimated_pace:time estimated_time:time


Successful first shot:
rake db:create:all
script/generate scaffold stage number:integer landmark:string miles:float difficulty:integer estimated_pace:time estimated_time:time
rake db:migrate
script/server

View http://0.0.0.0:3000/stages

Change data types and see what happens

rake db:migrate VERSION=0
rm db/*.sqlite3
script/generate scaffold stage number:integer landmark:string miles:decimal(5,1) difficulty:integer estimated_pace:time estimated_time:time
rake db:migrate
#edit db/migrate/*_create_stages.rb and add precision:  
#   t.decimal :miles, :precision=> 1, :scale=> 3
script/server

What is the decimal type in sqlite? 


Shouldn't have times for stage.  Those are calculated from runner.

remove_column:

script/generate migration remove_times_from_stage estimated_pace:time estimated_time:time
rake db:migrate


Add runner.  Basic information is estimated pace and actual time.

script/generate scaffold runner stage_id:integer name:string estimated_pace:time completed:boolean actual_time:time

Modify stage

Stage -- has_many runners (since we'res supporting multiple teams)
    class Stage < ActiveRecord::Base
      has_many :runner
    end
    
runner -- belongs_to stage. (since a runner will run is will either run one stage or is an alternate.  No stage indicates an alternate).

    class Runner < ActiveRecord::Base
      belongs_to :stage
    end
    
We support multiple teams, so we will add a team with the name and number.

script/generate scaffold team number:integer name:string

Create a results page

script/generate controller results index
      exists  app/controllers/
      exists  app/helpers/
      create  app/views/results
      exists  test/functional/
      exists  test/unit/helpers/
      create  app/controllers/results_controller.rb
      create  test/functional/results_controller_test.rb
      create  app/helpers/results_helper.rb
      create  test/unit/helpers/results_helper_test.rb
      create  app/views/results/index.html.erb
      
     
     
Goal is to link a runner to a stage and display the runner name on the stage

Create test runner data

ruby script/generate migration add_test_runner_data

class AddTestRunnerData < ActiveRecord::Migration 
    def self.up
        Runner.delete_all 
        Runner.create(
            :stage => 1,
            :name => %{Adam},
            :pace => '08:42',
            :completed => false
        )
        #...
    end
    
    def self.down
        Runner.delete_all
    end
end

Add migration with B2V default stage data.  See page 91 in Agile Web Dev w Rails 3rd ed.

ruby script/generate migration add_stage_data

class AddStageData < ActiveRecord::Migration
  def self.up
    Stage.delete_all 
    Stage.create(
        :number => 1,
        :landmark => %{Start},
        :miles => 5.4,
        :difficulty => 13
    )
    #...
  end

  def self.down
    Stage.delete_all
  end
end

Add stage status page
script/generate controller status index update

GIT updates:

Jetlabpro:SitRepStage skng$ git status
# On branch master
# Changed but not updated:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#       modified:   config/routes.rb
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       app/controllers/results_controller.rb
#       app/controllers/runners_controller.rb
#       app/controllers/stages_controller.rb
#       app/controllers/status_controller.rb
#       app/controllers/teams_controller.rb
#       app/helpers/results_helper.rb
#       app/helpers/runners_helper.rb
#       app/helpers/stages_helper.rb
#       app/helpers/status_helper.rb
#       app/helpers/teams_helper.rb
#       app/models/
#       app/views/
#       db/migrate/
#       db/schema.rb
#       generate
#       notebook.txt
#       public/stylesheets/
#       test/fixtures/
#       test/functional/
#       test/unit/
no changes added to commit (use "git add" and/or "git commit -a")
Jetlabpro:SitRepStage skng$ git commit -a -m "Added runners, teams, results and status"
[master 511d2f8] Added runners, teams, results and status
 1 files changed, 4 insertions(+), 0 deletions(-)
Jetlabpro:SitRepStage skng$ git push
Counting objects: 7, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 389 bytes, done.
Total 4 (delta 3), reused 0 (delta 0)
To git@github.com:nomadicoder/SitRepStage.git
   ea8f5fb..511d2f8  master -> master
Jetlabpro:SitRepStage skng$ git status
# On branch master
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#       app/controllers/results_controller.rb
#       app/controllers/runners_controller.rb
#       app/controllers/stages_controller.rb
#       app/controllers/status_controller.rb
#       app/controllers/teams_controller.rb
#       app/helpers/results_helper.rb
#       app/helpers/runners_helper.rb
#       app/helpers/stages_helper.rb
#       app/helpers/status_helper.rb
#       app/helpers/teams_helper.rb
#       app/models/
#       app/views/
#       db/migrate/
#       db/schema.rb
#       generate
#       notebook.txt
#       public/stylesheets/
#       test/fixtures/
#       test/functional/
#       test/unit/
nothing added to commit but untracked files present (use "git add" to track)
Jetlabpro:SitRepStage skng$ git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?
Jetlabpro:SitRepStage skng$ git add *
Jetlabpro:SitRepStage skng$ git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#       new file:   app/controllers/results_controller.rb
#       new file:   app/controllers/runners_controller.rb
#       new file:   app/controllers/stages_controller.rb
#       new file:   app/controllers/status_controller.rb
#       new file:   app/controllers/teams_controller.rb
#       new file:   app/helpers/results_helper.rb
#       new file:   app/helpers/runners_helper.rb
#       new file:   app/helpers/stages_helper.rb
#       new file:   app/helpers/status_helper.rb
#       new file:   app/helpers/teams_helper.rb
#       new file:   app/models/runner.rb
#       new file:   app/models/stage.rb
#       new file:   app/models/team.rb
#       new file:   app/views/layouts/runners.html.erb
#       new file:   app/views/layouts/stages.html.erb
#       new file:   app/views/layouts/teams.html.erb
#       new file:   app/views/results/index.html.erb
#       new file:   app/views/runners/edit.html.erb
#       new file:   app/views/runners/index.html.erb
#       new file:   app/views/runners/new.html.erb
#       new file:   app/views/runners/show.html.erb
#       new file:   app/views/stages/edit.html.erb
#       new file:   app/views/stages/index.html.erb
#       new file:   app/views/stages/new.html.erb
#       new file:   app/views/stages/show.html.erb
#       new file:   app/views/status/index.html.erb
#       new file:   app/views/status/update.html.erb
#       new file:   app/views/teams/edit.html.erb
#       new file:   app/views/teams/index.html.erb
#       new file:   app/views/teams/new.html.erb
#       new file:   app/views/teams/show.html.erb
#       new file:   db/migrate/20091021230549_create_stages.rb
#       new file:   db/migrate/20091022140215_remove_times_from_stage.rb
#       new file:   db/migrate/20091022144051_create_runners.rb
#       new file:   db/migrate/20091022144525_create_teams.rb
#       new file:   db/migrate/20091022184938_add_test_runner_data.rb
#       new file:   db/migrate/20091022190306_add_stage_data.rb
#       new file:   db/schema.rb
#       new file:   generate
#       new file:   notebook.txt
#       new file:   public/stylesheets/scaffold.css
#       new file:   test/fixtures/runners.yml
#       new file:   test/fixtures/stages.yml
#       new file:   test/fixtures/teams.yml
#       new file:   test/functional/results_controller_test.rb
#       new file:   test/functional/runners_controller_test.rb
#       new file:   test/functional/stages_controller_test.rb
#       new file:   test/functional/status_controller_test.rb
#       new file:   test/functional/teams_controller_test.rb
#       new file:   test/unit/helpers/results_helper_test.rb
#       new file:   test/unit/helpers/runners_helper_test.rb
#       new file:   test/unit/helpers/stages_helper_test.rb
#       new file:   test/unit/helpers/status_helper_test.rb
#       new file:   test/unit/helpers/teams_helper_test.rb
#       new file:   test/unit/runner_test.rb
#       new file:   test/unit/stage_test.rb
#       new file:   test/unit/team_test.rb
#
Jetlabpro:SitRepStage skng$ git commit -a -m "Added runners, teams, results and status"
[master a5125f7] Added runners, teams, results and status
 57 files changed, 1503 insertions(+), 0 deletions(-)
 create mode 100644 app/controllers/results_controller.rb
 create mode 100644 app/controllers/runners_controller.rb
 create mode 100644 app/controllers/stages_controller.rb
 create mode 100644 app/controllers/status_controller.rb
 create mode 100644 app/controllers/teams_controller.rb
 create mode 100644 app/helpers/results_helper.rb
 create mode 100644 app/helpers/runners_helper.rb
 create mode 100644 app/helpers/stages_helper.rb
 create mode 100644 app/helpers/status_helper.rb
 create mode 100644 app/helpers/teams_helper.rb
 create mode 100644 app/models/runner.rb
 create mode 100644 app/models/stage.rb
 create mode 100644 app/models/team.rb
 create mode 100644 app/views/layouts/runners.html.erb
 create mode 100644 app/views/layouts/stages.html.erb
 create mode 100644 app/views/layouts/teams.html.erb
 create mode 100644 app/views/results/index.html.erb
 create mode 100644 app/views/runners/edit.html.erb
 create mode 100644 app/views/runners/index.html.erb
 create mode 100644 app/views/runners/new.html.erb
 create mode 100644 app/views/runners/show.html.erb
 create mode 100644 app/views/stages/edit.html.erb
 create mode 100644 app/views/stages/index.html.erb
 create mode 100644 app/views/stages/new.html.erb
 create mode 100644 app/views/stages/show.html.erb
 create mode 100644 app/views/status/index.html.erb
 create mode 100644 app/views/status/update.html.erb
 create mode 100644 app/views/teams/edit.html.erb
 create mode 100644 app/views/teams/index.html.erb
 create mode 100644 app/views/teams/new.html.erb
 create mode 100644 app/views/teams/show.html.erb
 create mode 100644 db/migrate/20091021230549_create_stages.rb
 create mode 100644 db/migrate/20091022140215_remove_times_from_stage.rb
 create mode 100644 db/migrate/20091022144051_create_runners.rb
 create mode 100644 db/migrate/20091022144525_create_teams.rb
 create mode 100644 db/migrate/20091022184938_add_test_runner_data.rb
 create mode 100644 db/migrate/20091022190306_add_stage_data.rb
 create mode 100644 db/schema.rb
 create mode 100644 generate
 create mode 100644 notebook.txt
 create mode 100644 public/stylesheets/scaffold.css
 create mode 100644 test/fixtures/runners.yml
 create mode 100644 test/fixtures/stages.yml
 create mode 100644 test/fixtures/teams.yml
 create mode 100644 test/functional/results_controller_test.rb
 create mode 100644 test/functional/runners_controller_test.rb
 create mode 100644 test/functional/stages_controller_test.rb
 create mode 100644 test/functional/status_controller_test.rb
 create mode 100644 test/functional/teams_controller_test.rb
 create mode 100644 test/unit/helpers/results_helper_test.rb
 create mode 100644 test/unit/helpers/runners_helper_test.rb
 create mode 100644 test/unit/helpers/stages_helper_test.rb
 create mode 100644 test/unit/helpers/status_helper_test.rb
 create mode 100644 test/unit/helpers/teams_helper_test.rb
 create mode 100644 test/unit/runner_test.rb
 create mode 100644 test/unit/stage_test.rb
 create mode 100644 test/unit/team_test.rb
Jetlabpro:SitRepStage skng$ git push
Counting objects: 86, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (72/72), done.
Writing objects: 100% (79/79), 13.12 KiB, done.
Total 79 (delta 18), reused 0 (delta 0)
To git@github.com:nomadicoder/SitRepStage.git
   511d2f8..a5125f7  master -> master
   

NOTE: Had to do git add * to get all new files in.

Friday, October 30, 2009
Want to list a stage runner chart.  List runners in stage order.

Here is how to get the derived values - an estimated time based on the runner's estimated pace and the stage distance
Mod will be made in the runner's model

    class Runner < ActiveRecord::Base
      belongs_to :stage
      belongs_to :team
      def self.find_all_runners
        find(:all, :order => "stage_id")
      end
    end

In the results controller, get the runner information

    class ResultsController < ApplicationController
      def index
        @runners = Runner.find_all_runners
      end
    end

Here is how to display the results table for all the runners.

    <% total_time = 0 %>
    <% @runners.each do |runner| %>
      <% stage_time = runner.stage.miles * (runner.estimated_pace.min + runner.estimated_pace.sec/60.0) %>
      <% total_time = total_time + stage_time %>
      <tr>
        <td><%=h runner.stage.number %></td>
        <td><%=h runner.stage.landmark %></td>
        <td><%=h runner.stage.miles %></td>
        <td><%=h runner.name %></td>
        <td><%=h stage_time %></td>
        <td><%=h total_time %></td>
        <td></td>
      </tr>
    <% end %>
